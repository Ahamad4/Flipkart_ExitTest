<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="12" total="32" passed="19" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-01-09T23:03:16 IST" name="Suite" finished-at="2023-01-09T23:08:36 IST" duration-ms="320389">
    <groups>
    </groups>
    <test started-at="2023-01-09T23:03:16 IST" name="Test" finished-at="2023-01-09T23:08:36 IST" duration-ms="320389">
      <class name="Flipkart.ExitTest.Test_SearchFuctionality">
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:Flipkart.ExitTest.Test_SearchFuctionality@56276db8]" started-at="2023-01-09T23:05:09 IST" name="startTest" finished-at="2023-01-09T23:05:11 IST" duration-ms="1268" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Flipkart.ExitTest.Test_SearchFuctionality.Test_compare_product() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="Test_compare_product()[pri:1, instance:Flipkart.ExitTest.Test_SearchFuctionality@56276db8]" started-at="2023-01-09T23:05:11 IST" name="Test_compare_product" finished-at="2023-01-09T23:05:23 IST" duration-ms="12251" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_compare_product -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:Flipkart.ExitTest.Test_SearchFuctionality@56276db8]" started-at="2023-01-09T23:05:23 IST" name="reportFlush" finished-at="2023-01-09T23:05:23 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test_compare_product status=SUCCESS method=Test_SearchFuctionality.Test_compare_product()[pri:1, instance:Flipkart.ExitTest.Test_SearchFuctionality@56276db8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:Flipkart.ExitTest.Test_SearchFuctionality@56276db8]" started-at="2023-01-09T23:05:23 IST" name="startTest" finished-at="2023-01-09T23:05:25 IST" duration-ms="1707" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Flipkart.ExitTest.Test_SearchFuctionality.Test_SearchAndCheckSpecification() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="Test_SearchAndCheckSpecification()[pri:2, instance:Flipkart.ExitTest.Test_SearchFuctionality@56276db8]" started-at="2023-01-09T23:05:25 IST" name="Test_SearchAndCheckSpecification" finished-at="2023-01-09T23:05:32 IST" duration-ms="7806" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_SearchAndCheckSpecification -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:Flipkart.ExitTest.Test_SearchFuctionality@56276db8]" started-at="2023-01-09T23:05:32 IST" name="reportFlush" finished-at="2023-01-09T23:05:32 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test_SearchAndCheckSpecification status=SUCCESS method=Test_SearchFuctionality.Test_SearchAndCheckSpecification()[pri:2, instance:Flipkart.ExitTest.Test_SearchFuctionality@56276db8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:Flipkart.ExitTest.Test_SearchFuctionality@56276db8]" started-at="2023-01-09T23:05:32 IST" name="startTest" finished-at="2023-01-09T23:05:34 IST" duration-ms="2071" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Flipkart.ExitTest.Test_SearchFuctionality.Test_Hower_on_product() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="Test_Hower_on_product()[pri:3, instance:Flipkart.ExitTest.Test_SearchFuctionality@56276db8]" started-at="2023-01-09T23:05:34 IST" name="Test_Hower_on_product" finished-at="2023-01-09T23:05:48 IST" duration-ms="13111" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Hower_on_product -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:Flipkart.ExitTest.Test_SearchFuctionality@56276db8]" started-at="2023-01-09T23:05:48 IST" name="reportFlush" finished-at="2023-01-09T23:05:48 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test_Hower_on_product status=SUCCESS method=Test_SearchFuctionality.Test_Hower_on_product()[pri:3, instance:Flipkart.ExitTest.Test_SearchFuctionality@56276db8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
      </class> <!-- Flipkart.ExitTest.Test_SearchFuctionality -->
      <class name="Flipkart.ExitTest.Test_Footer">
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:Flipkart.ExitTest.Test_Footer@5b408dc3]" started-at="2023-01-09T23:07:44 IST" name="startTest" finished-at="2023-01-09T23:07:45 IST" duration-ms="1217" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Flipkart.ExitTest.Test_Footer.Test_Social_Media() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="Test_Social_Media()[pri:1, instance:Flipkart.ExitTest.Test_Footer@5b408dc3]" started-at="2023-01-09T23:07:45 IST" name="Test_Social_Media" finished-at="2023-01-09T23:08:05 IST" duration-ms="20273" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Social_Media -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:Flipkart.ExitTest.Test_Footer@5b408dc3]" started-at="2023-01-09T23:08:05 IST" name="reportFlush" finished-at="2023-01-09T23:08:05 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test_Social_Media status=SUCCESS method=Test_Footer.Test_Social_Media()[pri:1, instance:Flipkart.ExitTest.Test_Footer@5b408dc3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:Flipkart.ExitTest.Test_Footer@5b408dc3]" started-at="2023-01-09T23:08:05 IST" name="startTest" finished-at="2023-01-09T23:08:07 IST" duration-ms="1669" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Flipkart.ExitTest.Test_Footer.Test_FAQ() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="Test_FAQ()[pri:2, instance:Flipkart.ExitTest.Test_Footer@5b408dc3]" started-at="2023-01-09T23:08:07 IST" name="Test_FAQ" finished-at="2023-01-09T23:08:16 IST" duration-ms="8796" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_FAQ -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:Flipkart.ExitTest.Test_Footer@5b408dc3]" started-at="2023-01-09T23:08:16 IST" name="reportFlush" finished-at="2023-01-09T23:08:16 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test_FAQ status=SUCCESS method=Test_Footer.Test_FAQ()[pri:2, instance:Flipkart.ExitTest.Test_Footer@5b408dc3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:Flipkart.ExitTest.Test_Footer@5b408dc3]" started-at="2023-01-09T23:08:16 IST" name="startTest" finished-at="2023-01-09T23:08:17 IST" duration-ms="1286" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Flipkart.ExitTest.Test_Footer.Test_Careers() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="Test_Careers()[pri:3, instance:Flipkart.ExitTest.Test_Footer@5b408dc3]" started-at="2023-01-09T23:08:17 IST" name="Test_Careers" finished-at="2023-01-09T23:08:36 IST" duration-ms="19235" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Careers -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:Flipkart.ExitTest.Test_Footer@5b408dc3]" started-at="2023-01-09T23:08:36 IST" name="reportFlush" finished-at="2023-01-09T23:08:36 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test_Careers status=SUCCESS method=Test_Footer.Test_Careers()[pri:3, instance:Flipkart.ExitTest.Test_Footer@5b408dc3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
      </class> <!-- Flipkart.ExitTest.Test_Footer -->
      <class name="Flipkart.ExitTest.Test_Basic_Flipkart">
        <test-method is-config="true" signature="launchBrowser()[pri:0, instance:Flipkart.ExitTest.Test_Basic_Flipkart@7829b776]" started-at="2023-01-09T23:03:11 IST" name="launchBrowser" finished-at="2023-01-09T23:03:16 IST" duration-ms="4517" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchBrowser -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:Flipkart.ExitTest.Test_Basic_Flipkart@7829b776]" started-at="2023-01-09T23:03:16 IST" name="startTest" finished-at="2023-01-09T23:04:01 IST" duration-ms="45405" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Flipkart.ExitTest.Test_Basic_Flipkart.Test_verify_Title()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="Test_verify_Title()[pri:1, instance:Flipkart.ExitTest.Test_Basic_Flipkart@7829b776]" started-at="2023-01-09T23:04:01 IST" name="Test_verify_Title" finished-at="2023-01-09T23:04:01 IST" duration-ms="122" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_verify_Title -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:Flipkart.ExitTest.Test_Basic_Flipkart@7829b776]" started-at="2023-01-09T23:04:01 IST" name="reportFlush" finished-at="2023-01-09T23:04:01 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test_verify_Title status=SUCCESS method=Test_Basic_Flipkart.Test_verify_Title()[pri:1, instance:Flipkart.ExitTest.Test_Basic_Flipkart@7829b776] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:Flipkart.ExitTest.Test_Basic_Flipkart@7829b776]" started-at="2023-01-09T23:04:01 IST" name="startTest" finished-at="2023-01-09T23:04:03 IST" duration-ms="1656" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Flipkart.ExitTest.Test_Basic_Flipkart.Test_loginFlipkart() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="Test_loginFlipkart()[pri:2, instance:Flipkart.ExitTest.Test_Basic_Flipkart@7829b776]" started-at="2023-01-09T23:04:03 IST" name="Test_loginFlipkart" finished-at="2023-01-09T23:04:06 IST" duration-ms="3292" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_loginFlipkart -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:Flipkart.ExitTest.Test_Basic_Flipkart@7829b776]" started-at="2023-01-09T23:04:06 IST" name="startTest" finished-at="2023-01-09T23:04:08 IST" duration-ms="1250" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Flipkart.ExitTest.Test_Basic_Flipkart.Test_Search_Item() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:Flipkart.ExitTest.Test_Basic_Flipkart@7829b776]" started-at="2023-01-09T23:04:06 IST" name="reportFlush" finished-at="2023-01-09T23:04:06 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test_loginFlipkart status=SUCCESS method=Test_Basic_Flipkart.Test_loginFlipkart()[pri:2, instance:Flipkart.ExitTest.Test_Basic_Flipkart@7829b776] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
        <test-method signature="Test_Search_Item()[pri:3, instance:Flipkart.ExitTest.Test_Basic_Flipkart@7829b776]" started-at="2023-01-09T23:04:08 IST" name="Test_Search_Item" finished-at="2023-01-09T23:04:12 IST" duration-ms="4250" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Search_Item -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:Flipkart.ExitTest.Test_Basic_Flipkart@7829b776]" started-at="2023-01-09T23:04:12 IST" name="reportFlush" finished-at="2023-01-09T23:04:12 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test_Search_Item status=SUCCESS method=Test_Basic_Flipkart.Test_Search_Item()[pri:3, instance:Flipkart.ExitTest.Test_Basic_Flipkart@7829b776] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Flipkart.ExitTest.Test_Basic_Flipkart@7829b776]" started-at="2023-01-09T23:08:36 IST" name="tearDown" finished-at="2023-01-09T23:08:37 IST" duration-ms="624" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Flipkart.ExitTest.Test_Basic_Flipkart -->
      <class name="Flipkart.ExitTest.Test_AddToCart_and_BuyNow">
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:Flipkart.ExitTest.Test_AddToCart_and_BuyNow@51e8e6e6]" started-at="2023-01-09T23:05:48 IST" name="startTest" finished-at="2023-01-09T23:05:49 IST" duration-ms="1621" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Flipkart.ExitTest.Test_AddToCart_and_BuyNow.Test_Add_to_cart() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="Test_Add_to_cart()[pri:1, instance:Flipkart.ExitTest.Test_AddToCart_and_BuyNow@51e8e6e6]" started-at="2023-01-09T23:05:49 IST" name="Test_Add_to_cart" finished-at="2023-01-09T23:06:22 IST" duration-ms="32716" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"link text","selector":"Remote Control"}
  (Session info: chrome=108.0.5359.125)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.4.0', revision: 'e5c75ed026a'
System info: host: 'IN-PG02NKJ9', ip: '192.168.1.6', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.17'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [b4675fca9ffeb2e3d3337c3e6784dfd5, findElement {using=link text, value=Remote Control}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\AHAMAD~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:50145}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:50145/devtoo..., se:cdpVersion: 108.0.5359.125, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: b4675fca9ffeb2e3d3337c3e6784dfd5]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"link text","selector":"Remote Control"}
  (Session info: chrome=108.0.5359.125)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.4.0', revision: 'e5c75ed026a'
System info: host: 'IN-PG02NKJ9', ip: '192.168.1.6', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.17'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [b4675fca9ffeb2e3d3337c3e6784dfd5, findElement {using=link text, value=Remote Control}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\AHAMAD~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:50145}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:50145/devtoo..., se:cdpVersion: 108.0.5359.125, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: b4675fca9ffeb2e3d3337c3e6784dfd5
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:547)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:365)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:357)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:70)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:39)
at com.sun.proxy.$Proxy16.click(Unknown Source)
at PageFactory.AddToCart_and_BuyNowPage.go_to_electronics(AddToCart_and_BuyNowPage.java:64)
at Flipkart.ExitTest.Test_AddToCart_and_BuyNow.Test_Add_to_cart(Test_AddToCart_and_BuyNow.java:22)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:324)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:74)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:123)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:456)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:169)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:595)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:581)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Add_to_cart -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:Flipkart.ExitTest.Test_AddToCart_and_BuyNow@51e8e6e6]" started-at="2023-01-09T23:06:22 IST" name="reportFlush" finished-at="2023-01-09T23:06:22 IST" duration-ms="531" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test_Add_to_cart status=FAILURE method=Test_AddToCart_and_BuyNow.Test_Add_to_cart()[pri:1, instance:Flipkart.ExitTest.Test_AddToCart_and_BuyNow@51e8e6e6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:Flipkart.ExitTest.Test_AddToCart_and_BuyNow@51e8e6e6]" started-at="2023-01-09T23:06:22 IST" name="startTest" finished-at="2023-01-09T23:06:24 IST" duration-ms="1935" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Flipkart.ExitTest.Test_AddToCart_and_BuyNow.Test_Buy_Now() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="Test_Buy_Now()[pri:2, instance:Flipkart.ExitTest.Test_AddToCart_and_BuyNow@51e8e6e6]" started-at="2023-01-09T23:06:24 IST" name="Test_Buy_Now" finished-at="2023-01-09T23:06:34 IST" duration-ms="9844" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Buy_Now -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:Flipkart.ExitTest.Test_AddToCart_and_BuyNow@51e8e6e6]" started-at="2023-01-09T23:06:34 IST" name="reportFlush" finished-at="2023-01-09T23:06:34 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test_Buy_Now status=SUCCESS method=Test_AddToCart_and_BuyNow.Test_Buy_Now()[pri:2, instance:Flipkart.ExitTest.Test_AddToCart_and_BuyNow@51e8e6e6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
      </class> <!-- Flipkart.ExitTest.Test_AddToCart_and_BuyNow -->
      <class name="Flipkart.ExitTest.Test_Travel">
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:Flipkart.ExitTest.Test_Travel@36676c1a]" started-at="2023-01-09T23:07:18 IST" name="startTest" finished-at="2023-01-09T23:07:19 IST" duration-ms="1419" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Flipkart.ExitTest.Test_Travel.Test_searchFlight() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="Test_searchFlight()[pri:0, instance:Flipkart.ExitTest.Test_Travel@36676c1a]" started-at="2023-01-09T23:07:19 IST" name="Test_searchFlight" finished-at="2023-01-09T23:07:44 IST" duration-ms="24526" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_searchFlight -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:Flipkart.ExitTest.Test_Travel@36676c1a]" started-at="2023-01-09T23:07:44 IST" name="reportFlush" finished-at="2023-01-09T23:07:44 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test_searchFlight status=SUCCESS method=Test_Travel.Test_searchFlight()[pri:0, instance:Flipkart.ExitTest.Test_Travel@36676c1a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
      </class> <!-- Flipkart.ExitTest.Test_Travel -->
      <class name="Flipkart.ExitTest.Test_Grocery">
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:Flipkart.ExitTest.Test_Grocery@56f6d40b]" started-at="2023-01-09T23:06:34 IST" name="startTest" finished-at="2023-01-09T23:06:35 IST" duration-ms="1025" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Flipkart.ExitTest.Test_Grocery.Test_checkGroeryCart() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="Test_checkGroeryCart()[pri:1, instance:Flipkart.ExitTest.Test_Grocery@56f6d40b]" started-at="2023-01-09T23:06:35 IST" name="Test_checkGroeryCart" finished-at="2023-01-09T23:06:45 IST" duration-ms="10110" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_checkGroeryCart -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:Flipkart.ExitTest.Test_Grocery@56f6d40b]" started-at="2023-01-09T23:06:45 IST" name="reportFlush" finished-at="2023-01-09T23:06:45 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test_checkGroeryCart status=SUCCESS method=Test_Grocery.Test_checkGroeryCart()[pri:1, instance:Flipkart.ExitTest.Test_Grocery@56f6d40b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:Flipkart.ExitTest.Test_Grocery@56f6d40b]" started-at="2023-01-09T23:06:45 IST" name="startTest" finished-at="2023-01-09T23:06:47 IST" duration-ms="1548" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Flipkart.ExitTest.Test_Grocery.Test_AddGroceryItem() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="Test_AddGroceryItem()[pri:2, instance:Flipkart.ExitTest.Test_Grocery@56f6d40b]" started-at="2023-01-09T23:06:47 IST" name="Test_AddGroceryItem" finished-at="2023-01-09T23:06:56 IST" duration-ms="8677" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_AddGroceryItem -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:Flipkart.ExitTest.Test_Grocery@56f6d40b]" started-at="2023-01-09T23:06:56 IST" name="startTest" finished-at="2023-01-09T23:06:57 IST" duration-ms="1188" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Flipkart.ExitTest.Test_Grocery.Test_CheckGrocetyFilter() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:Flipkart.ExitTest.Test_Grocery@56f6d40b]" started-at="2023-01-09T23:06:56 IST" name="reportFlush" finished-at="2023-01-09T23:06:56 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test_AddGroceryItem status=SUCCESS method=Test_Grocery.Test_AddGroceryItem()[pri:2, instance:Flipkart.ExitTest.Test_Grocery@56f6d40b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
        <test-method signature="Test_CheckGrocetyFilter()[pri:3, instance:Flipkart.ExitTest.Test_Grocery@56f6d40b]" started-at="2023-01-09T23:06:57 IST" name="Test_CheckGrocetyFilter" finished-at="2023-01-09T23:07:18 IST" duration-ms="21037" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_CheckGrocetyFilter -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:Flipkart.ExitTest.Test_Grocery@56f6d40b]" started-at="2023-01-09T23:07:18 IST" name="reportFlush" finished-at="2023-01-09T23:07:18 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test_CheckGrocetyFilter status=SUCCESS method=Test_Grocery.Test_CheckGrocetyFilter()[pri:3, instance:Flipkart.ExitTest.Test_Grocery@56f6d40b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
      </class> <!-- Flipkart.ExitTest.Test_Grocery -->
      <class name="Flipkart.ExitTest.Test_Headers">
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:Flipkart.ExitTest.Test_Headers@9ed238c]" started-at="2023-01-09T23:04:12 IST" name="startTest" finished-at="2023-01-09T23:04:13 IST" duration-ms="1221" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Flipkart.ExitTest.Test_Headers.Test_MensFasion() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="Test_MensFasion()[pri:1, instance:Flipkart.ExitTest.Test_Headers@9ed238c]" started-at="2023-01-09T23:04:13 IST" name="Test_MensFasion" finished-at="2023-01-09T23:04:19 IST" duration-ms="6012" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_MensFasion -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:Flipkart.ExitTest.Test_Headers@9ed238c]" started-at="2023-01-09T23:04:19 IST" name="reportFlush" finished-at="2023-01-09T23:04:19 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test_MensFasion status=SUCCESS method=Test_Headers.Test_MensFasion()[pri:1, instance:Flipkart.ExitTest.Test_Headers@9ed238c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:Flipkart.ExitTest.Test_Headers@9ed238c]" started-at="2023-01-09T23:04:19 IST" name="startTest" finished-at="2023-01-09T23:04:20 IST" duration-ms="1049" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Flipkart.ExitTest.Test_Headers.Test_Home_Furnishings() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="Test_Home_Furnishings()[pri:2, instance:Flipkart.ExitTest.Test_Headers@9ed238c]" started-at="2023-01-09T23:04:20 IST" name="Test_Home_Furnishings" finished-at="2023-01-09T23:04:27 IST" duration-ms="7167" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Home_Furnishings -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:Flipkart.ExitTest.Test_Headers@9ed238c]" started-at="2023-01-09T23:04:27 IST" name="reportFlush" finished-at="2023-01-09T23:04:27 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test_Home_Furnishings status=SUCCESS method=Test_Headers.Test_Home_Furnishings()[pri:2, instance:Flipkart.ExitTest.Test_Headers@9ed238c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:Flipkart.ExitTest.Test_Headers@9ed238c]" started-at="2023-01-09T23:04:27 IST" name="startTest" finished-at="2023-01-09T23:04:28 IST" duration-ms="1103" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Flipkart.ExitTest.Test_Headers.Test_Top_offer() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="Test_Top_offer()[pri:3, instance:Flipkart.ExitTest.Test_Headers@9ed238c]" started-at="2023-01-09T23:04:28 IST" name="Test_Top_offer" finished-at="2023-01-09T23:04:32 IST" duration-ms="3096" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Top_offer -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:Flipkart.ExitTest.Test_Headers@9ed238c]" started-at="2023-01-09T23:04:32 IST" name="reportFlush" finished-at="2023-01-09T23:04:32 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test_Top_offer status=SUCCESS method=Test_Headers.Test_Top_offer()[pri:3, instance:Flipkart.ExitTest.Test_Headers@9ed238c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:Flipkart.ExitTest.Test_Headers@9ed238c]" started-at="2023-01-09T23:04:32 IST" name="startTest" finished-at="2023-01-09T23:04:33 IST" duration-ms="1269" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Flipkart.ExitTest.Test_Headers.Test_MotorVehicle() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="Test_MotorVehicle()[pri:4, instance:Flipkart.ExitTest.Test_Headers@9ed238c]" started-at="2023-01-09T23:04:33 IST" name="Test_MotorVehicle" finished-at="2023-01-09T23:04:42 IST" duration-ms="9393" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_MotorVehicle -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:Flipkart.ExitTest.Test_Headers@9ed238c]" started-at="2023-01-09T23:04:42 IST" name="reportFlush" finished-at="2023-01-09T23:04:42 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test_MotorVehicle status=SUCCESS method=Test_Headers.Test_MotorVehicle()[pri:4, instance:Flipkart.ExitTest.Test_Headers@9ed238c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:Flipkart.ExitTest.Test_Headers@9ed238c]" started-at="2023-01-09T23:04:42 IST" name="startTest" finished-at="2023-01-09T23:04:43 IST" duration-ms="1166" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Flipkart.ExitTest.Test_Headers.Test_BestSeller() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="Test_BestSeller()[pri:5, instance:Flipkart.ExitTest.Test_Headers@9ed238c]" started-at="2023-01-09T23:04:43 IST" name="Test_BestSeller" finished-at="2023-01-09T23:05:09 IST" duration-ms="25960" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_BestSeller -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:Flipkart.ExitTest.Test_Headers@9ed238c]" started-at="2023-01-09T23:05:09 IST" name="reportFlush" finished-at="2023-01-09T23:05:09 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test_BestSeller status=SUCCESS method=Test_Headers.Test_BestSeller()[pri:5, instance:Flipkart.ExitTest.Test_Headers@9ed238c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
      </class> <!-- Flipkart.ExitTest.Test_Headers -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
