<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="12" total="32" passed="16" failed="4" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-01-09T22:38:35 IST" name="Suite" finished-at="2023-01-09T22:42:56 IST" duration-ms="261219">
    <groups>
    </groups>
    <test started-at="2023-01-09T22:38:35 IST" name="Test" finished-at="2023-01-09T22:42:56 IST" duration-ms="261219">
      <class name="Flipkart.ExitTest.Test_SearchFuctionality">
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:Flipkart.ExitTest.Test_SearchFuctionality@7fe083b1]" started-at="2023-01-09T22:39:55 IST" name="startTest" finished-at="2023-01-09T22:39:56 IST" duration-ms="1126" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Flipkart.ExitTest.Test_SearchFuctionality.Test_compare_product() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="Test_compare_product()[pri:1, instance:Flipkart.ExitTest.Test_SearchFuctionality@7fe083b1]" started-at="2023-01-09T22:39:56 IST" name="Test_compare_product" finished-at="2023-01-09T22:40:07 IST" duration-ms="10249" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_compare_product -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:Flipkart.ExitTest.Test_SearchFuctionality@7fe083b1]" started-at="2023-01-09T22:40:07 IST" name="reportFlush" finished-at="2023-01-09T22:40:07 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test_compare_product status=SUCCESS method=Test_SearchFuctionality.Test_compare_product()[pri:1, instance:Flipkart.ExitTest.Test_SearchFuctionality@7fe083b1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:Flipkart.ExitTest.Test_SearchFuctionality@7fe083b1]" started-at="2023-01-09T22:40:07 IST" name="startTest" finished-at="2023-01-09T22:40:08 IST" duration-ms="1342" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Flipkart.ExitTest.Test_SearchFuctionality.Test_SearchAndCheckSpecification() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="Test_SearchAndCheckSpecification()[pri:2, instance:Flipkart.ExitTest.Test_SearchFuctionality@7fe083b1]" started-at="2023-01-09T22:40:08 IST" name="Test_SearchAndCheckSpecification" finished-at="2023-01-09T22:40:14 IST" duration-ms="5972" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_SearchAndCheckSpecification -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:Flipkart.ExitTest.Test_SearchFuctionality@7fe083b1]" started-at="2023-01-09T22:40:14 IST" name="reportFlush" finished-at="2023-01-09T22:40:14 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test_SearchAndCheckSpecification status=SUCCESS method=Test_SearchFuctionality.Test_SearchAndCheckSpecification()[pri:2, instance:Flipkart.ExitTest.Test_SearchFuctionality@7fe083b1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:Flipkart.ExitTest.Test_SearchFuctionality@7fe083b1]" started-at="2023-01-09T22:40:14 IST" name="startTest" finished-at="2023-01-09T22:40:15 IST" duration-ms="1193" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Flipkart.ExitTest.Test_SearchFuctionality.Test_Hower_on_product() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="Test_Hower_on_product()[pri:3, instance:Flipkart.ExitTest.Test_SearchFuctionality@7fe083b1]" started-at="2023-01-09T22:40:15 IST" name="Test_Hower_on_product" finished-at="2023-01-09T22:40:27 IST" duration-ms="11401" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Hower_on_product -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:Flipkart.ExitTest.Test_SearchFuctionality@7fe083b1]" started-at="2023-01-09T22:40:27 IST" name="reportFlush" finished-at="2023-01-09T22:40:27 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test_Hower_on_product status=SUCCESS method=Test_SearchFuctionality.Test_Hower_on_product()[pri:3, instance:Flipkart.ExitTest.Test_SearchFuctionality@7fe083b1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
      </class> <!-- Flipkart.ExitTest.Test_SearchFuctionality -->
      <class name="Flipkart.ExitTest.Test_Footer">
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:Flipkart.ExitTest.Test_Footer@74f7d1d2]" started-at="2023-01-09T22:42:01 IST" name="startTest" finished-at="2023-01-09T22:42:03 IST" duration-ms="1299" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Flipkart.ExitTest.Test_Footer.Test_Social_Media() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="Test_Social_Media()[pri:1, instance:Flipkart.ExitTest.Test_Footer@74f7d1d2]" started-at="2023-01-09T22:42:03 IST" name="Test_Social_Media" finished-at="2023-01-09T22:42:25 IST" duration-ms="22641" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Flipkart (@Flipkart) / Twitter] but found []]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Flipkart (@Flipkart) / Twitter] but found []
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at Flipkart.ExitTest.Test_Footer.Test_Social_Media(Test_Footer.java:51)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Social_Media -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:Flipkart.ExitTest.Test_Footer@74f7d1d2]" started-at="2023-01-09T22:42:25 IST" name="reportFlush" finished-at="2023-01-09T22:42:26 IST" duration-ms="591" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test_Social_Media status=FAILURE method=Test_Footer.Test_Social_Media()[pri:1, instance:Flipkart.ExitTest.Test_Footer@74f7d1d2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:Flipkart.ExitTest.Test_Footer@74f7d1d2]" started-at="2023-01-09T22:42:26 IST" name="startTest" finished-at="2023-01-09T22:42:27 IST" duration-ms="1290" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Flipkart.ExitTest.Test_Footer.Test_FAQ() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="Test_FAQ()[pri:2, instance:Flipkart.ExitTest.Test_Footer@74f7d1d2]" started-at="2023-01-09T22:42:27 IST" name="Test_FAQ" finished-at="2023-01-09T22:42:35 IST" duration-ms="7841" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_FAQ -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:Flipkart.ExitTest.Test_Footer@74f7d1d2]" started-at="2023-01-09T22:42:35 IST" name="reportFlush" finished-at="2023-01-09T22:42:35 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test_FAQ status=SUCCESS method=Test_Footer.Test_FAQ()[pri:2, instance:Flipkart.ExitTest.Test_Footer@74f7d1d2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:Flipkart.ExitTest.Test_Footer@74f7d1d2]" started-at="2023-01-09T22:42:35 IST" name="startTest" finished-at="2023-01-09T22:42:36 IST" duration-ms="1190" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Flipkart.ExitTest.Test_Footer.Test_Careers() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="Test_Careers()[pri:3, instance:Flipkart.ExitTest.Test_Footer@74f7d1d2]" started-at="2023-01-09T22:42:36 IST" name="Test_Careers" finished-at="2023-01-09T22:42:56 IST" duration-ms="20129" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Careers -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:Flipkart.ExitTest.Test_Footer@74f7d1d2]" started-at="2023-01-09T22:42:56 IST" name="reportFlush" finished-at="2023-01-09T22:42:56 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test_Careers status=SUCCESS method=Test_Footer.Test_Careers()[pri:3, instance:Flipkart.ExitTest.Test_Footer@74f7d1d2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
      </class> <!-- Flipkart.ExitTest.Test_Footer -->
      <class name="Flipkart.ExitTest.Test_Basic_Flipkart">
        <test-method is-config="true" signature="launchBrowser()[pri:0, instance:Flipkart.ExitTest.Test_Basic_Flipkart@4c4d362a]" started-at="2023-01-09T22:38:31 IST" name="launchBrowser" finished-at="2023-01-09T22:38:35 IST" duration-ms="3722" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchBrowser -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:Flipkart.ExitTest.Test_Basic_Flipkart@4c4d362a]" started-at="2023-01-09T22:38:35 IST" name="startTest" finished-at="2023-01-09T22:39:00 IST" duration-ms="24516" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Flipkart.ExitTest.Test_Basic_Flipkart.Test_verify_Title()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="Test_verify_Title()[pri:1, instance:Flipkart.ExitTest.Test_Basic_Flipkart@4c4d362a]" started-at="2023-01-09T22:39:00 IST" name="Test_verify_Title" finished-at="2023-01-09T22:39:00 IST" duration-ms="155" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_verify_Title -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:Flipkart.ExitTest.Test_Basic_Flipkart@4c4d362a]" started-at="2023-01-09T22:39:00 IST" name="reportFlush" finished-at="2023-01-09T22:39:00 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test_verify_Title status=SUCCESS method=Test_Basic_Flipkart.Test_verify_Title()[pri:1, instance:Flipkart.ExitTest.Test_Basic_Flipkart@4c4d362a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:Flipkart.ExitTest.Test_Basic_Flipkart@4c4d362a]" started-at="2023-01-09T22:39:00 IST" name="startTest" finished-at="2023-01-09T22:39:01 IST" duration-ms="1022" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Flipkart.ExitTest.Test_Basic_Flipkart.Test_loginFlipkart() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="Test_loginFlipkart()[pri:2, instance:Flipkart.ExitTest.Test_Basic_Flipkart@4c4d362a]" started-at="2023-01-09T22:39:01 IST" name="Test_loginFlipkart" finished-at="2023-01-09T22:39:04 IST" duration-ms="3297" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_loginFlipkart -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:Flipkart.ExitTest.Test_Basic_Flipkart@4c4d362a]" started-at="2023-01-09T22:39:04 IST" name="reportFlush" finished-at="2023-01-09T22:39:04 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test_loginFlipkart status=SUCCESS method=Test_Basic_Flipkart.Test_loginFlipkart()[pri:2, instance:Flipkart.ExitTest.Test_Basic_Flipkart@4c4d362a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:Flipkart.ExitTest.Test_Basic_Flipkart@4c4d362a]" started-at="2023-01-09T22:39:04 IST" name="startTest" finished-at="2023-01-09T22:39:05 IST" duration-ms="1069" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Flipkart.ExitTest.Test_Basic_Flipkart.Test_Search_Item() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="Test_Search_Item()[pri:3, instance:Flipkart.ExitTest.Test_Basic_Flipkart@4c4d362a]" started-at="2023-01-09T22:39:05 IST" name="Test_Search_Item" finished-at="2023-01-09T22:39:09 IST" duration-ms="4183" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Search_Item -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:Flipkart.ExitTest.Test_Basic_Flipkart@4c4d362a]" started-at="2023-01-09T22:39:09 IST" name="reportFlush" finished-at="2023-01-09T22:39:09 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test_Search_Item status=SUCCESS method=Test_Basic_Flipkart.Test_Search_Item()[pri:3, instance:Flipkart.ExitTest.Test_Basic_Flipkart@4c4d362a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Flipkart.ExitTest.Test_Basic_Flipkart@4c4d362a]" started-at="2023-01-09T22:42:56 IST" name="tearDown" finished-at="2023-01-09T22:42:57 IST" duration-ms="1117" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Flipkart.ExitTest.Test_Basic_Flipkart -->
      <class name="Flipkart.ExitTest.Test_AddToCart_and_BuyNow">
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:Flipkart.ExitTest.Test_AddToCart_and_BuyNow@23c388c2]" started-at="2023-01-09T22:40:27 IST" name="startTest" finished-at="2023-01-09T22:40:28 IST" duration-ms="1172" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Flipkart.ExitTest.Test_AddToCart_and_BuyNow.Test_Add_to_cart() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="Test_Add_to_cart()[pri:1, instance:Flipkart.ExitTest.Test_AddToCart_and_BuyNow@23c388c2]" started-at="2023-01-09T22:40:28 IST" name="Test_Add_to_cart" finished-at="2023-01-09T22:40:40 IST" duration-ms="12678" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Add_to_cart -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:Flipkart.ExitTest.Test_AddToCart_and_BuyNow@23c388c2]" started-at="2023-01-09T22:40:40 IST" name="reportFlush" finished-at="2023-01-09T22:40:40 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test_Add_to_cart status=SUCCESS method=Test_AddToCart_and_BuyNow.Test_Add_to_cart()[pri:1, instance:Flipkart.ExitTest.Test_AddToCart_and_BuyNow@23c388c2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:Flipkart.ExitTest.Test_AddToCart_and_BuyNow@23c388c2]" started-at="2023-01-09T22:40:40 IST" name="startTest" finished-at="2023-01-09T22:40:42 IST" duration-ms="1146" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Flipkart.ExitTest.Test_AddToCart_and_BuyNow.Test_Buy_Now() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="Test_Buy_Now()[pri:2, instance:Flipkart.ExitTest.Test_AddToCart_and_BuyNow@23c388c2]" started-at="2023-01-09T22:40:42 IST" name="Test_Buy_Now" finished-at="2023-01-09T22:40:51 IST" duration-ms="9404" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Buy_Now -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:Flipkart.ExitTest.Test_AddToCart_and_BuyNow@23c388c2]" started-at="2023-01-09T22:40:51 IST" name="reportFlush" finished-at="2023-01-09T22:40:51 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test_Buy_Now status=SUCCESS method=Test_AddToCart_and_BuyNow.Test_Buy_Now()[pri:2, instance:Flipkart.ExitTest.Test_AddToCart_and_BuyNow@23c388c2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
      </class> <!-- Flipkart.ExitTest.Test_AddToCart_and_BuyNow -->
      <class name="Flipkart.ExitTest.Test_Travel">
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:Flipkart.ExitTest.Test_Travel@f713686]" started-at="2023-01-09T22:41:58 IST" name="startTest" finished-at="2023-01-09T22:42:00 IST" duration-ms="1215" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Flipkart.ExitTest.Test_Travel.Test_searchFlight() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="Test_searchFlight()[pri:0, instance:Flipkart.ExitTest.Test_Travel@f713686]" started-at="2023-01-09T22:42:00 IST" name="Test_searchFlight" finished-at="2023-01-09T22:42:01 IST" duration-ms="1116" status="FAIL">
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element <div class="xtXmba">...</div> is not clickable at point (758, 145). Other element would receive the click: <div class="_6uPgrs">...</div>
  (Session info: chrome=108.0.5359.125)
Build info: version: '4.4.0', revision: 'e5c75ed026a'
System info: host: 'IN-PG02NKJ9', ip: '192.168.1.6', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [d906a6ee74bebd26c5a9efc68e4463fd, clickElement {id=8afa6ca2-ee19-4217-89d4-db39c87e85be}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\AHAMAD~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:58513}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:58513/devtoo..., se:cdpVersion: 108.0.5359.125, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (d906a6ee74bebd26c5a9efc68e4463fd)] -> xpath: //div[contains(text(),'Travel')]]
Session ID: d906a6ee74bebd26c5a9efc68e4463fd]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element <div class="xtXmba">...</div> is not clickable at point (758, 145). Other element would receive the click: <div class="_6uPgrs">...</div>
  (Session info: chrome=108.0.5359.125)
Build info: version: '4.4.0', revision: 'e5c75ed026a'
System info: host: 'IN-PG02NKJ9', ip: '192.168.1.6', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [d906a6ee74bebd26c5a9efc68e4463fd, clickElement {id=8afa6ca2-ee19-4217-89d4-db39c87e85be}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\AHAMAD~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:58513}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:58513/devtoo..., se:cdpVersion: 108.0.5359.125, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (d906a6ee74bebd26c5a9efc68e4463fd)] -> xpath: //div[contains(text(),'Travel')]]
Session ID: d906a6ee74bebd26c5a9efc68e4463fd
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:547)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:257)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:78)
at jdk.internal.reflect.GeneratedMethodAccessor6.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:52)
at com.sun.proxy.$Proxy19.click(Unknown Source)
at PageFactory.TravelPage.Click_On_Travel(TravelPage.java:69)
at Flipkart.ExitTest.Test_Travel.Test_searchFlight(Test_Travel.java:28)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_searchFlight -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:Flipkart.ExitTest.Test_Travel@f713686]" started-at="2023-01-09T22:42:01 IST" name="reportFlush" finished-at="2023-01-09T22:42:01 IST" duration-ms="546" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test_searchFlight status=FAILURE method=Test_Travel.Test_searchFlight()[pri:0, instance:Flipkart.ExitTest.Test_Travel@f713686] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
      </class> <!-- Flipkart.ExitTest.Test_Travel -->
      <class name="Flipkart.ExitTest.Test_Grocery">
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:Flipkart.ExitTest.Test_Grocery@486be205]" started-at="2023-01-09T22:40:51 IST" name="startTest" finished-at="2023-01-09T22:40:52 IST" duration-ms="990" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Flipkart.ExitTest.Test_Grocery.Test_checkGroeryCart() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="Test_checkGroeryCart()[pri:1, instance:Flipkart.ExitTest.Test_Grocery@486be205]" started-at="2023-01-09T22:40:52 IST" name="Test_checkGroeryCart" finished-at="2023-01-09T22:41:02 IST" duration-ms="9895" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_checkGroeryCart -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:Flipkart.ExitTest.Test_Grocery@486be205]" started-at="2023-01-09T22:41:02 IST" name="startTest" finished-at="2023-01-09T22:41:03 IST" duration-ms="1343" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Flipkart.ExitTest.Test_Grocery.Test_AddGroceryItem() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:Flipkart.ExitTest.Test_Grocery@486be205]" started-at="2023-01-09T22:41:02 IST" name="reportFlush" finished-at="2023-01-09T22:41:02 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test_checkGroeryCart status=SUCCESS method=Test_Grocery.Test_checkGroeryCart()[pri:1, instance:Flipkart.ExitTest.Test_Grocery@486be205] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
        <test-method signature="Test_AddGroceryItem()[pri:2, instance:Flipkart.ExitTest.Test_Grocery@486be205]" started-at="2023-01-09T22:41:03 IST" name="Test_AddGroceryItem" finished-at="2023-01-09T22:41:35 IST" duration-ms="32211" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"link text","selector":"Ghee & Oils"}
  (Session info: chrome=108.0.5359.125)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.4.0', revision: 'e5c75ed026a'
System info: host: 'IN-PG02NKJ9', ip: '192.168.1.6', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [d906a6ee74bebd26c5a9efc68e4463fd, findElement {using=link text, value=Ghee & Oils}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\AHAMAD~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:58513}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:58513/devtoo..., se:cdpVersion: 108.0.5359.125, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: d906a6ee74bebd26c5a9efc68e4463fd]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"link text","selector":"Ghee & Oils"}
  (Session info: chrome=108.0.5359.125)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.4.0', revision: 'e5c75ed026a'
System info: host: 'IN-PG02NKJ9', ip: '192.168.1.6', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [d906a6ee74bebd26c5a9efc68e4463fd, findElement {using=link text, value=Ghee & Oils}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\AHAMAD~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:58513}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:58513/devtoo..., se:cdpVersion: 108.0.5359.125, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: d906a6ee74bebd26c5a9efc68e4463fd
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:547)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:365)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:357)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:70)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:39)
at com.sun.proxy.$Proxy19.click(Unknown Source)
at PageFactory.GroceryPage.staples_item(GroceryPage.java:125)
at Flipkart.ExitTest.Test_Grocery.Test_AddGroceryItem(Test_Grocery.java:64)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_AddGroceryItem -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:Flipkart.ExitTest.Test_Grocery@486be205]" started-at="2023-01-09T22:41:35 IST" name="reportFlush" finished-at="2023-01-09T22:41:36 IST" duration-ms="662" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test_AddGroceryItem status=FAILURE method=Test_Grocery.Test_AddGroceryItem()[pri:2, instance:Flipkart.ExitTest.Test_Grocery@486be205] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:Flipkart.ExitTest.Test_Grocery@486be205]" started-at="2023-01-09T22:41:36 IST" name="startTest" finished-at="2023-01-09T22:41:38 IST" duration-ms="1504" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Flipkart.ExitTest.Test_Grocery.Test_CheckGrocetyFilter() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="Test_CheckGrocetyFilter()[pri:3, instance:Flipkart.ExitTest.Test_Grocery@486be205]" started-at="2023-01-09T22:41:38 IST" name="Test_CheckGrocetyFilter" finished-at="2023-01-09T22:41:58 IST" duration-ms="20882" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_CheckGrocetyFilter -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:Flipkart.ExitTest.Test_Grocery@486be205]" started-at="2023-01-09T22:41:58 IST" name="reportFlush" finished-at="2023-01-09T22:41:58 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test_CheckGrocetyFilter status=SUCCESS method=Test_Grocery.Test_CheckGrocetyFilter()[pri:3, instance:Flipkart.ExitTest.Test_Grocery@486be205] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
      </class> <!-- Flipkart.ExitTest.Test_Grocery -->
      <class name="Flipkart.ExitTest.Test_Headers">
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:Flipkart.ExitTest.Test_Headers@2c5d601e]" started-at="2023-01-09T22:39:09 IST" name="startTest" finished-at="2023-01-09T22:39:10 IST" duration-ms="930" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Flipkart.ExitTest.Test_Headers.Test_MensFasion() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="Test_MensFasion()[pri:1, instance:Flipkart.ExitTest.Test_Headers@2c5d601e]" started-at="2023-01-09T22:39:10 IST" name="Test_MensFasion" finished-at="2023-01-09T22:39:17 IST" duration-ms="6285" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_MensFasion -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:Flipkart.ExitTest.Test_Headers@2c5d601e]" started-at="2023-01-09T22:39:17 IST" name="reportFlush" finished-at="2023-01-09T22:39:17 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test_MensFasion status=SUCCESS method=Test_Headers.Test_MensFasion()[pri:1, instance:Flipkart.ExitTest.Test_Headers@2c5d601e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:Flipkart.ExitTest.Test_Headers@2c5d601e]" started-at="2023-01-09T22:39:17 IST" name="startTest" finished-at="2023-01-09T22:39:18 IST" duration-ms="989" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Flipkart.ExitTest.Test_Headers.Test_Home_Furnishings() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="Test_Home_Furnishings()[pri:2, instance:Flipkart.ExitTest.Test_Headers@2c5d601e]" started-at="2023-01-09T22:39:18 IST" name="Test_Home_Furnishings" finished-at="2023-01-09T22:39:25 IST" duration-ms="7254" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Home_Furnishings -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:Flipkart.ExitTest.Test_Headers@2c5d601e]" started-at="2023-01-09T22:39:25 IST" name="reportFlush" finished-at="2023-01-09T22:39:25 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test_Home_Furnishings status=SUCCESS method=Test_Headers.Test_Home_Furnishings()[pri:2, instance:Flipkart.ExitTest.Test_Headers@2c5d601e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:Flipkart.ExitTest.Test_Headers@2c5d601e]" started-at="2023-01-09T22:39:25 IST" name="startTest" finished-at="2023-01-09T22:39:26 IST" duration-ms="1156" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Flipkart.ExitTest.Test_Headers.Test_Top_offer() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="Test_Top_offer()[pri:3, instance:Flipkart.ExitTest.Test_Headers@2c5d601e]" started-at="2023-01-09T22:39:26 IST" name="Test_Top_offer" finished-at="2023-01-09T22:39:30 IST" duration-ms="4052" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Top_offer -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:Flipkart.ExitTest.Test_Headers@2c5d601e]" started-at="2023-01-09T22:39:30 IST" name="reportFlush" finished-at="2023-01-09T22:39:30 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test_Top_offer status=SUCCESS method=Test_Headers.Test_Top_offer()[pri:3, instance:Flipkart.ExitTest.Test_Headers@2c5d601e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:Flipkart.ExitTest.Test_Headers@2c5d601e]" started-at="2023-01-09T22:39:30 IST" name="startTest" finished-at="2023-01-09T22:39:31 IST" duration-ms="999" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Flipkart.ExitTest.Test_Headers.Test_MotorVehicle() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="Test_MotorVehicle()[pri:4, instance:Flipkart.ExitTest.Test_Headers@2c5d601e]" started-at="2023-01-09T22:39:31 IST" name="Test_MotorVehicle" finished-at="2023-01-09T22:39:36 IST" duration-ms="5188" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Buy Two Wheeler Vehicle Online From Flipkart | Electric Vehicle Online 08-Jan-23] but found [Buy Two Wheeler Vehicle Online From Flipkart | Electric Vehicle Online 09-Jan-23]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Buy Two Wheeler Vehicle Online From Flipkart | Electric Vehicle Online 08-Jan-23] but found [Buy Two Wheeler Vehicle Online From Flipkart | Electric Vehicle Online 09-Jan-23]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at Flipkart.ExitTest.Test_Headers.Test_MotorVehicle(Test_Headers.java:98)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_MotorVehicle -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:Flipkart.ExitTest.Test_Headers@2c5d601e]" started-at="2023-01-09T22:39:36 IST" name="reportFlush" finished-at="2023-01-09T22:39:37 IST" duration-ms="684" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test_MotorVehicle status=FAILURE method=Test_Headers.Test_MotorVehicle()[pri:4, instance:Flipkart.ExitTest.Test_Headers@2c5d601e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:Flipkart.ExitTest.Test_Headers@2c5d601e]" started-at="2023-01-09T22:39:37 IST" name="startTest" finished-at="2023-01-09T22:39:38 IST" duration-ms="1100" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Flipkart.ExitTest.Test_Headers.Test_BestSeller() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="Test_BestSeller()[pri:5, instance:Flipkart.ExitTest.Test_Headers@2c5d601e]" started-at="2023-01-09T22:39:38 IST" name="Test_BestSeller" finished-at="2023-01-09T22:39:55 IST" duration-ms="17229" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_BestSeller -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:Flipkart.ExitTest.Test_Headers@2c5d601e]" started-at="2023-01-09T22:39:55 IST" name="reportFlush" finished-at="2023-01-09T22:39:55 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test_BestSeller status=SUCCESS method=Test_Headers.Test_BestSeller()[pri:5, instance:Flipkart.ExitTest.Test_Headers@2c5d601e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
      </class> <!-- Flipkart.ExitTest.Test_Headers -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
